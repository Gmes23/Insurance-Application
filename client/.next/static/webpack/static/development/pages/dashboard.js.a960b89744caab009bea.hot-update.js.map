{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.a960b89744caab009bea.hot-update.js","sources":["webpack:///./pages/dashboard.js"],"sourcesContent":["import { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport Layout from '../components/Layout';\n\n\nclass CarService {\n    constructor() {\n        this.car = this.car\n    }\n    // getCarsSmall() {\n    //     return fetch('http://localhost:4000/user', {\n    //         method: 'GET',\n    //         mode: 'no-cors',\n    //         headers: { 'Content-Type': 'application/json'}\n    //         })\n    //         .then(res => console.log(res.json, 'res from getsmall'));\n    // }\n\n    getCarsMedium() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n\n    getCarsLarge() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n}\n\nclass DataTableTemplatingDemo extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            users: [],\n            userDelete: []\n        };\n        this.carservice = new CarService();\n        this.brandTemplate = this.brandTemplate.bind(this);\n        this.colorTemplate = this.colorTemplate.bind(this);\n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(users, e){\n        e.preventDefault();\n        console.log(users, 'handles delete')\n    }\n    // handleDelete = userId => {\n    //     console.log(userId, 'this is user id')\n    // }\n\n    colorTemplate(rowData, column) {\n        return <span style={{ color: rowData['color'] }}>{rowData['color']}</span>;\n    }\n\n    brandTemplate(rowData, column) {\n        var src = \"showcase/resources/demo/images/car/\" + rowData.brand + \".png\";\n        return <img src={src} alt={rowData.brand} width=\"48px\" />;\n    }\n\n    actionTemplate(rowData, column) {\n        return <div>\n            <Button \n                type=\"button\"\n                icon=\"pi pi-times\" \n                className=\"p-button-danger\" \n                style={{ marginRight: '.5em' }}\n                value={this.state.users.id}\n                onClick={(e)=> this.handleDelete(this.state.users.id, e)}\n            >\n            </Button>\n            <Button type=\"button\" icon=\"pi pi-user-edit\" className=\"p-button-warning\" ></Button>\n        </div>;\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:4000/user', {\n            method: 'GET',\n            // mode: 'cors',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(response => response.json())\n            .then(data => this.setState({ users: data }));\n    }\n    \n    render() {\n        var carCount = this.state.cars ? this.state.cars.length : 0;\n        var header = <div className=\"p-clearfix\" style={{ 'lineHeight': '1.87em' }}>List of Cars <Button icon=\"pi pi-refresh\" style={{ 'float': 'right' }} /></div>;\n        var footer = \"There are \" + carCount + ' cars';\n        console.log(this.state.users, 'this is the state')\n\n        \n\n        return (\n            <Layout>\n\n                <div>\n                    <div className=\"content-section introduction\">\n                        <div className=\"feature-intro\">\n                            <h1>DataTable - Templating</h1>\n                            <p>Custom content at header, body and footer sections are supported via templating.</p>\n                        </div>\n                    </div>\n\n\n                    <div className=\"content-section implementation\">\n                        \n                        \n                            <DataTable value={this.state.users} header={header} footer={footer}>\n                                <Column field=\"first_name\" header=\"First Name\" />\n                                <Column field=\"last_name\" header=\"Last Name\" />\n                                <Column field=\"email_address\" header=\"Email Address\" />\n                                <Column field=\"phone_number\" header=\"Phone Number\" />\n                                {/* TODO: onCLick set date submit on user form */}\n                                <Column field=\"effective_date\" header=\"Effective Date\" />\n                                <Column field=\"primary_al\" header=\"Auto Liability\" />\n                                <Column field=\"primary_gl \" header=\"General Liability\" />\n                                <Column field=\"primary_el \" header=\"Employee Liability\" />\n\n                                <Column field=\"brand\" header=\"Brand\" body={this.brandTemplate} style={{ textAlign: 'center' }} />\n                                <Column field=\"color\" header=\"Color\" body={this.colorTemplate} />\n                                <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\n                            </DataTable>\n                 \n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default DataTableTemplatingDemo;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;;;;;;AAGA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AApGA;AACA;AAsGA;;;;A","sourceRoot":""}