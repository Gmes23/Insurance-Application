{"version":3,"file":"static/webpack/static/development/pages/dashboardx.js.df997b4d205655a119a1.hot-update.js","sources":["webpack:///./pages/dashboardx.js"],"sourcesContent":["import {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {InputText} from 'primereact/inputtext';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Growl} from 'primereact/growl';\nimport { Button } from 'primereact/button';\n\n\nexport class CarService {\n\n    getCarsSmall() {\n        return fetch('http://localhost:4000/user', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => data);\n        // .then((data) => {console.log(data)});\n    }\n\n    getCarsMedium() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n\n    getCarsLarge() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n}\nclass DataTableEditDemo2 extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            cars1: null,\n            cars2: []\n        };\n        this.clonedCars = {};\n        this.carservice = new CarService();\n\n        this.vinEditor = this.vinEditor.bind(this);\n        this.yearEditor = this.yearEditor.bind(this);\n        this.brandEditor = this.brandEditor.bind(this);\n        this.colorEditor = this.colorEditor.bind(this);\n        this.requiredValidator = this.requiredValidator.bind(this);\n\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n        this.onRowEditInit = this.onRowEditInit.bind(this);\n        this.onRowEditSave = this.onRowEditSave.bind(this);\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\n\n        //  Delete Method \n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n\n\n    }\n\n    componentDidMount() {\n        this.carservice.getCarsSmall().then(data => this.setState({cars1: data}));\n        this.carservice.getCarsSmall().then(data => this.setState({cars2: data}));\n    }\n\n    /* Cell Editing */\n    onEditorValueChange(props, value) {\n        let updatedCars = [...props.value];\n        updatedCars[props.rowIndex][props.field] = value;\n        this.setState({cars1: updatedCars});\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    vinEditor(props) {\n        return this.inputTextEditor(props, 'vin');\n    }\n\n    yearEditor(props) {\n        return this.inputTextEditor(props, 'year');\n    }\n\n    brandEditor(props) {\n        let brands = [\n            {label: 'Audi', value: 'Audi'},\n            {label: 'BMW', value: 'BMW'},\n            {label: 'Fiat', value: 'Fiat'},\n            {label: 'Ford', value: 'Ford'},\n            {label: 'Honda', value: 'Honda'},\n            {label: 'Jaguar', value: 'Jaguar'},\n            {label: 'Mercedes', value: 'Mercedes'},\n            {label: 'Renault', value: 'Renault'},\n            {label: 'VW', value: 'VW'},\n            {label: 'Volvo', value: 'Volvo'}\n        ];\n\n        return (\n            <Dropdown value={props.value[props.rowIndex].brand} options={brands}\n                    onChange={(e) => this.onEditorValueChange(props, e.value)} style={{width:'100%'}} placeholder=\"Select a City\"/>\n        );\n    }\n\n    colorEditor(props) {\n        return this.inputTextEditor(props, 'color');\n    }\n\n    requiredValidator(props) {\n        let value = props.rowData[props.field];\n        return value && value.length > 0;\n    }\n\n    /* Row Editing */\n    onEditorValueChangeForRowEditing(props, value) {\n        let updatedCars = [...props.value];\n        updatedCars[props.rowIndex][props.field] = value;\n        this.setState({cars2: updatedCars});\n    }\n\n    editorForRowEditing(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChangeForRowEditing(props, e.target.value)} />;\n    }\n\n    onRowEditorValidator(rowData) {\n        console.log(rowData, 'rowdataonroweditovalidto')\n        let value = rowData['first_name'];\n        return value.length > 0;\n    }\n\n    onRowEditInit(event) {\n        this.clonedCars[event.data.vin] = {...event.data};\n    }\n\n    onRowEditSave(event) {\n        if (this.onRowEditorValidator(event.data)) {\n            console.log(event.data.id, ' this event data ')\n            delete this.clonedCars[event.data.vin];\n            fetch('http://localhost:4000/user/' + event.data.id, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(event.data)\n            })\n            .then(response => response.json())\n            .then(data => this.setState({ users: data }));\n            this.growl.show({severity: 'success', summary: 'Success', detail: 'Car is updated'});\n        }\n        else {\n            this.growl.show({severity: 'error', summary: 'Error', detail: 'Brand is required'});\n        }\n    }\n\n    onRowEditCancel(event) {\n        let cars = [...this.state.cars2];\n        cars[event.index] = this.clonedCars[event.data.vin];\n        delete this.clonedCars[event.data.vin];\n        this.setState({\n            cars2: cars\n        })\n    }\n\n    // These handle the Delete method \n    actionTemplate(rowData, column) {\n        return <div>\n            <Button\n                type=\"button\"\n                icon=\"pi pi-times\"\n                className=\"p-button-danger\"\n                style={{ marginRight: '.5em' }}\n                onClick={(e) => this.handleDelete(rowData, e)}\n            >\n            </Button>\n            {/* <Button \n                type=\"button\" \n                icon=\"pi pi-user-edit\" \n                className=\"p-button-warning\" \n                onClick={(e) => this.handleEdit(rowData, e)}\n            ></Button> */}\n        </div>;\n    }\n\n    render() {\n        console.log(this.state, 'this state')\n        return (\n            <div>\n                <div className=\"content-section introduction\">\n                    <div className=\"feature-intro\">\n                        <h1>DataTable - Edit</h1>\n                        <p>Cell and Row editing provides a rapid and user friendly way to manipulate data.</p>\n                    </div>\n                </div>\n\n                <div className=\"content-section implementation\">\n                    <Growl ref={(el) => this.growl = el} />\n\n                    {/* <h3>Cell Editing</h3>\n                    <DataTable value={this.state.cars1} editable={true}>\n                        <Column field=\"vin\" header=\"Vin\" editor={this.vinEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\n                        <Column field=\"year\" header=\"Year\" editor={this.yearEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"brand\" header=\"Brand\" editor={this.brandEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"color\" header=\"Color\" editor={this.colorEditor} style={{height: '3.5em'}}/>\n                    </DataTable> */}\n\n                    <h3>Row Editing</h3>\n                    <DataTable value={this.state.cars2} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"first_name\" header=\"Vin\" style={{height: '3.5em'}}/>\n                        <Column field=\"first_name\" header=\"First Name\" editor={(props) => this.editorForRowEditing(props, 'first_name')} style={{height: '3.5em'}}/>\n                        <Column field=\"last_name\" header=\"Last Name\" editor={(props) => this.editorForRowEditing(props, 'last_name')} style={{height: '3.5em'}}/>\n                        <Column field=\"email_address\" header=\"Email Address\" editor={(props) => this.editorForRowEditing(props, 'email_address')} style={{height: '3.5em'}}/>\n                        <Column field=\"phone_number\" header=\"Phone Number\" editor={(props) => this.editorForRowEditing(props, 'phone_number')} style={{height: '3.5em'}}/>\n                        <Column field=\"effective_date\" header=\"Effective Date\" editor={(props) => this.editorForRowEditing(props, 'effective_date')} style={{height: '3.5em'}}/>\n                        <Column field=\"status\" header=\"Status\" editor={(props) => this.editorForRowEditing(props, 'status')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_al\" header=\"Auto Liability\" editor={(props) => this.editorForRowEditing(props, 'primary_al')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_gl\" header=\"General Liability\" editor={(props) => this.editorForRowEditing(props, 'primary_gl')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_el\" header=\"Primary Liability\" editor={(props) => this.editorForRowEditing(props, 'primary_el')} style={{height: '3.5em'}}/>\n                        \n                        <Column header=\"Delete Applicant\" body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\n\n\n\n                        <Column rowEditor={true} style={{'width': '70px', 'textAlign': 'center'}}></Column>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataTableEditDemo2;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAEA;AAVA;AAAA;AAAA;AAaA;AACA;AAAA;AACA;AAfA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AApBA;AACA;AADA;AAAA;AACA;AAqBA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAvBA;AA0BA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAenMA;AACA;AAqMA;;;;A","sourceRoot":""}