{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gm/Desktop/workFolder/client/pages/dashboard2.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Growl } from 'primereact/growl';\nimport { CarService } from '../service/CarService';\nexport var DataTableEditDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableEditDemo, _Component);\n\n  var _super = _createSuper(DataTableEditDemo);\n\n  function DataTableEditDemo() {\n    var _this;\n\n    _classCallCheck(this, DataTableEditDemo);\n\n    _this = _super.call(this);\n    _this.state = {\n      cars1: null,\n      cars2: null\n    };\n    _this.clonedCars = {};\n    _this.carservice = new CarService();\n    _this.vinEditor = _this.vinEditor.bind(_assertThisInitialized(_this));\n    _this.yearEditor = _this.yearEditor.bind(_assertThisInitialized(_this));\n    _this.brandEditor = _this.brandEditor.bind(_assertThisInitialized(_this));\n    _this.colorEditor = _this.colorEditor.bind(_assertThisInitialized(_this));\n    _this.requiredValidator = _this.requiredValidator.bind(_assertThisInitialized(_this));\n    _this.editorForRowEditing = _this.editorForRowEditing.bind(_assertThisInitialized(_this));\n    _this.onRowEditorValidator = _this.onRowEditorValidator.bind(_assertThisInitialized(_this));\n    _this.onRowEditInit = _this.onRowEditInit.bind(_assertThisInitialized(_this));\n    _this.onRowEditSave = _this.onRowEditSave.bind(_assertThisInitialized(_this));\n    _this.onRowEditCancel = _this.onRowEditCancel.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableEditDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.carservice.getCarsSmall().then(function (data) {\n        return _this2.setState({\n          cars1: data\n        });\n      });\n      this.carservice.getCarsSmall().then(function (data) {\n        return _this2.setState({\n          cars2: data\n        });\n      });\n    }\n    /* Cell Editing */\n\n  }, {\n    key: \"onEditorValueChange\",\n    value: function onEditorValueChange(props, value) {\n      var updatedCars = _toConsumableArray(props.value);\n\n      updatedCars[props.rowIndex][props.field] = value;\n      this.setState({\n        cars1: updatedCars\n      });\n    }\n  }, {\n    key: \"inputTextEditor\",\n    value: function inputTextEditor(props, field) {\n      var _this3 = this;\n\n      return __jsx(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        onChange: function onChange(e) {\n          return _this3.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"vinEditor\",\n    value: function vinEditor(props) {\n      return this.inputTextEditor(props, 'vin');\n    }\n  }, {\n    key: \"yearEditor\",\n    value: function yearEditor(props) {\n      return this.inputTextEditor(props, 'year');\n    }\n  }, {\n    key: \"brandEditor\",\n    value: function brandEditor(props) {\n      var _this4 = this;\n\n      var brands = [{\n        label: 'Audi',\n        value: 'Audi'\n      }, {\n        label: 'BMW',\n        value: 'BMW'\n      }, {\n        label: 'Fiat',\n        value: 'Fiat'\n      }, {\n        label: 'Ford',\n        value: 'Ford'\n      }, {\n        label: 'Honda',\n        value: 'Honda'\n      }, {\n        label: 'Jaguar',\n        value: 'Jaguar'\n      }, {\n        label: 'Mercedes',\n        value: 'Mercedes'\n      }, {\n        label: 'Renault',\n        value: 'Renault'\n      }, {\n        label: 'VW',\n        value: 'VW'\n      }, {\n        label: 'Volvo',\n        value: 'Volvo'\n      }];\n      return __jsx(Dropdown, {\n        value: props.value[props.rowIndex].brand,\n        options: brands,\n        onChange: function onChange(e) {\n          return _this4.onEditorValueChange(props, e.value);\n        },\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Select a City\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"colorEditor\",\n    value: function colorEditor(props) {\n      return this.inputTextEditor(props, 'color');\n    }\n  }, {\n    key: \"requiredValidator\",\n    value: function requiredValidator(props) {\n      var value = props.rowData[props.field];\n      return value && value.length > 0;\n    }\n    /* Row Editing */\n\n  }, {\n    key: \"onEditorValueChangeForRowEditing\",\n    value: function onEditorValueChangeForRowEditing(props, value) {\n      var updatedCars = _toConsumableArray(props.value);\n\n      updatedCars[props.rowIndex][props.field] = value;\n      this.setState({\n        cars2: updatedCars\n      });\n    }\n  }, {\n    key: \"editorForRowEditing\",\n    value: function editorForRowEditing(props, field) {\n      var _this5 = this;\n\n      return __jsx(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        onChange: function onChange(e) {\n          return _this5.onEditorValueChangeForRowEditing(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"onRowEditorValidator\",\n    value: function onRowEditorValidator(rowData) {\n      var value = rowData['brand'];\n      return value.length > 0;\n    }\n  }, {\n    key: \"onRowEditInit\",\n    value: function onRowEditInit(event) {\n      this.clonedCars[event.data.vin] = _objectSpread({}, event.data);\n    }\n  }, {\n    key: \"onRowEditSave\",\n    value: function onRowEditSave(event) {\n      if (this.onRowEditorValidator(event.data)) {\n        delete this.clonedCars[event.data.vin];\n        this.growl.show({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Car is updated'\n        });\n      } else {\n        this.growl.show({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Brand is required'\n        });\n      }\n    }\n  }, {\n    key: \"onRowEditCancel\",\n    value: function onRowEditCancel(event) {\n      var cars = _toConsumableArray(this.state.cars2);\n\n      cars[event.index] = this.clonedCars[event.data.vin];\n      delete this.clonedCars[event.data.vin];\n      this.setState({\n        cars2: cars\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"feature-intro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"DataTable - Edit\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, \"Cell and Row editing provides a rapid and user friendly way to manipulate data.\"))), __jsx(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, __jsx(Growl, {\n        ref: function ref(el) {\n          return _this6.growl = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"Cell Editing\"), __jsx(DataTable, {\n        value: this.state.cars1,\n        editable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, __jsx(Column, {\n        field: \"vin\",\n        header: \"Vin\",\n        editor: this.vinEditor,\n        editorValidator: this.requiredValidator,\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"year\",\n        header: \"Year\",\n        editor: this.yearEditor,\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"brand\",\n        header: \"Brand\",\n        editor: this.brandEditor,\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"color\",\n        header: \"Color\",\n        editor: this.colorEditor,\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      })), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"Row Editing\"), __jsx(DataTable, {\n        value: this.state.cars2,\n        editMode: \"row\",\n        rowEditorValidator: this.onRowEditorValidator,\n        onRowEditInit: this.onRowEditInit,\n        onRowEditSave: this.onRowEditSave,\n        onRowEditCancel: this.onRowEditCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, __jsx(Column, {\n        field: \"vin\",\n        header: \"Vin\",\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"year\",\n        header: \"Year\",\n        editor: function editor(props) {\n          return _this6.editorForRowEditing(props, 'year');\n        },\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"brand\",\n        header: \"Brand\",\n        editor: function editor(props) {\n          return _this6.editorForRowEditing(props, 'brand');\n        },\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        field: \"color\",\n        header: \"Color\",\n        editor: function editor(props) {\n          return _this6.editorForRowEditing(props, 'color');\n        },\n        style: {\n          height: '3.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }), __jsx(Column, {\n        rowEditor: true,\n        style: {\n          'width': '70px',\n          'textAlign': 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return DataTableEditDemo;\n}(Component);","map":{"version":3,"sources":["/Users/gm/Desktop/workFolder/client/pages/dashboard2.js"],"names":["React","Component","DataTable","Column","InputText","Dropdown","Growl","CarService","DataTableEditDemo","state","cars1","cars2","clonedCars","carservice","vinEditor","bind","yearEditor","brandEditor","colorEditor","requiredValidator","editorForRowEditing","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","getCarsSmall","then","data","setState","props","value","updatedCars","rowIndex","field","rowData","e","onEditorValueChange","target","inputTextEditor","brands","label","brand","width","length","onEditorValueChangeForRowEditing","event","vin","growl","show","severity","summary","detail","cars","index","el","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {InputText} from 'primereact/inputtext';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Growl} from 'primereact/growl';\nimport {CarService} from '../service/CarService';\n\nexport class DataTableEditDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            cars1: null,\n            cars2: null\n        };\n        this.clonedCars = {};\n        this.carservice = new CarService();\n\n        this.vinEditor = this.vinEditor.bind(this);\n        this.yearEditor = this.yearEditor.bind(this);\n        this.brandEditor = this.brandEditor.bind(this);\n        this.colorEditor = this.colorEditor.bind(this);\n        this.requiredValidator = this.requiredValidator.bind(this);\n\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n        this.onRowEditInit = this.onRowEditInit.bind(this);\n        this.onRowEditSave = this.onRowEditSave.bind(this);\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\n    }\n\n    componentDidMount() {\n        this.carservice.getCarsSmall().then(data => this.setState({cars1: data}));\n        this.carservice.getCarsSmall().then(data => this.setState({cars2: data}));\n    }\n\n    /* Cell Editing */\n    onEditorValueChange(props, value) {\n        let updatedCars = [...props.value];\n        updatedCars[props.rowIndex][props.field] = value;\n        this.setState({cars1: updatedCars});\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    vinEditor(props) {\n        return this.inputTextEditor(props, 'vin');\n    }\n\n    yearEditor(props) {\n        return this.inputTextEditor(props, 'year');\n    }\n\n    brandEditor(props) {\n        let brands = [\n            {label: 'Audi', value: 'Audi'},\n            {label: 'BMW', value: 'BMW'},\n            {label: 'Fiat', value: 'Fiat'},\n            {label: 'Ford', value: 'Ford'},\n            {label: 'Honda', value: 'Honda'},\n            {label: 'Jaguar', value: 'Jaguar'},\n            {label: 'Mercedes', value: 'Mercedes'},\n            {label: 'Renault', value: 'Renault'},\n            {label: 'VW', value: 'VW'},\n            {label: 'Volvo', value: 'Volvo'}\n        ];\n\n        return (\n            <Dropdown value={props.value[props.rowIndex].brand} options={brands}\n                    onChange={(e) => this.onEditorValueChange(props, e.value)} style={{width:'100%'}} placeholder=\"Select a City\"/>\n        );\n    }\n\n    colorEditor(props) {\n        return this.inputTextEditor(props, 'color');\n    }\n\n    requiredValidator(props) {\n        let value = props.rowData[props.field];\n        return value && value.length > 0;\n    }\n\n    /* Row Editing */\n    onEditorValueChangeForRowEditing(props, value) {\n        let updatedCars = [...props.value];\n        updatedCars[props.rowIndex][props.field] = value;\n        this.setState({cars2: updatedCars});\n    }\n\n    editorForRowEditing(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChangeForRowEditing(props, e.target.value)} />;\n    }\n\n    onRowEditorValidator(rowData) {\n        let value = rowData['brand'];\n        return value.length > 0;\n    }\n\n    onRowEditInit(event) {\n        this.clonedCars[event.data.vin] = {...event.data};\n    }\n\n    onRowEditSave(event) {\n        if (this.onRowEditorValidator(event.data)) {\n            delete this.clonedCars[event.data.vin];\n            this.growl.show({severity: 'success', summary: 'Success', detail: 'Car is updated'});\n        }\n        else {\n            this.growl.show({severity: 'error', summary: 'Error', detail: 'Brand is required'});\n        }\n    }\n\n    onRowEditCancel(event) {\n        let cars = [...this.state.cars2];\n        cars[event.index] = this.clonedCars[event.data.vin];\n        delete this.clonedCars[event.data.vin];\n        this.setState({\n            cars2: cars\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"content-section introduction\">\n                    <div className=\"feature-intro\">\n                        <h1>DataTable - Edit</h1>\n                        <p>Cell and Row editing provides a rapid and user friendly way to manipulate data.</p>\n                    </div>\n                </div>\n\n                <div className=\"content-section implementation\">\n                    <Growl ref={(el) => this.growl = el} />\n\n                    <h3>Cell Editing</h3>\n                    <DataTable value={this.state.cars1} editable={true}>\n                        <Column field=\"vin\" header=\"Vin\" editor={this.vinEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\n                        <Column field=\"year\" header=\"Year\" editor={this.yearEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"brand\" header=\"Brand\" editor={this.brandEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"color\" header=\"Color\" editor={this.colorEditor} style={{height: '3.5em'}}/>\n                    </DataTable>\n\n                    <h3>Row Editing</h3>\n                    <DataTable value={this.state.cars2} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"vin\" header=\"Vin\" style={{height: '3.5em'}}/>\n                        <Column field=\"year\" header=\"Year\" editor={(props) => this.editorForRowEditing(props, 'year')} style={{height: '3.5em'}}/>\n                        <Column field=\"brand\" header=\"Brand\" editor={(props) => this.editorForRowEditing(props, 'brand')} style={{height: '3.5em'}}/>\n                        <Column field=\"color\" header=\"Color\" editor={(props) => this.editorForRowEditing(props, 'color')} style={{height: '3.5em'}}/>\n                        <Column rowEditor={true} style={{'width': '70px', 'textAlign': 'center'}}></Column>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}