{"ast":null,"code":"var _jsxFileName = \"/Users/gm/Desktop/workFolder/client/pages/dashboard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Growl } from 'primereact/growl';\nimport { Button } from 'primereact/button';\nexport class CarService {\n  getCarsSmall() {\n    return fetch('http://localhost:4000/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => data); // .then((data) => {console.log(data)});\n  }\n\n  getCarsMedium() {\n    return fetch('https://jsonplaceholder.typicode.com/todos/1').then(res => res.json);\n  }\n\n  getCarsLarge() {\n    return fetch('https://jsonplaceholder.typicode.com/todos/1').then(res => res.json);\n  }\n\n}\n\nclass DataTableEditDemo2 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n    this.clonedUsers = {};\n    this.carservice = new CarService();\n    this.editorForRowEditing = this.editorForRowEditing.bind(this);\n    this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n    this.onRowEditInit = this.onRowEditInit.bind(this);\n    this.onRowEditSave = this.onRowEditSave.bind(this);\n    this.onRowEditCancel = this.onRowEditCancel.bind(this); //  Delete Method \n\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.handleDelete = this.handleDelete.bind(this); // Checks if what type of Liability User has\n\n    this.checkPrimaryAL = this.checkPrimaryAL.bind(this);\n    this.checkPrimaryEL = this.checkPrimaryEL.bind(this);\n    this.checkPrimaryGL = this.checkPrimaryGL.bind(this);\n  }\n\n  componentDidMount() {\n    this.carservice.getCarsSmall().then(data => this.setState({\n      cars2: data\n    }));\n  }\n  /* Row Editing */\n\n\n  onEditorValueChangeForRowEditing(props, value) {\n    let updatedUsers = [...props.value];\n    updatedUsers[props.rowIndex][props.field] = value;\n    this.setState({\n      users: updatedUsers\n    });\n  }\n\n  editorForRowEditing(props, field) {\n    return __jsx(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChangeForRowEditing(props, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    });\n  }\n\n  onRowEditorValidator(rowData) {\n    console.log(rowData, 'rowdataonroweditovalidto');\n    let value = rowData['first_name'];\n    return value.length > 0;\n  }\n\n  onRowEditInit(event) {\n    this.clonedUsers[event.data.vin] = _objectSpread({}, event.data);\n  }\n\n  onRowEditSave(event) {\n    if (this.onRowEditorValidator(event.data)) {\n      console.log(event.data.id, ' this event data ');\n      delete this.clonedUsers[event.data.vin];\n      fetch('http://localhost:4000/user/' + event.data.id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event.data)\n      }).then(response => response.json()).then(data => this.setState({\n        users: data\n      }));\n      this.growl.show({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Car is updated'\n      });\n    } else {\n      this.growl.show({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Brand is required'\n      });\n    }\n  }\n\n  onRowEditCancel(event) {\n    let users = [...this.state.users];\n    users[event.index] = this.clonedUsers[event.data.vin];\n    delete this.clonedUsers[event.data.vin];\n    this.setState({\n      users: users\n    });\n  } // These handle the Delete method \n\n\n  actionTemplate(rowData, column) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, __jsx(Button, {\n      type: \"button\",\n      icon: \"pi pi-times\",\n      className: \"p-button-danger\",\n      style: {\n        marginRight: '.5em'\n      },\n      onClick: e => this.handleDelete(rowData, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  handleDelete(rowData, e) {\n    e.preventDefault();\n    const userId = rowData.id;\n    fetch('http://localhost:4000/user/' + userId, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(this.setState({\n      users: rowData\n    }));\n  } //  Ternary function for liabilities\n\n\n  checkPrimaryAL(rowData, column) {\n    console.log(rowData.primary_al, 'rowDAtaeqweq');\n    return rowData.primary_al ? __jsx(\"i\", {\n      className: \"pi pi-check\",\n      style: {\n        'fontSize': '3em',\n        'color': 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 38\n      }\n    }) : __jsx(\"i\", {\n      className: \"pi pi-times\",\n      style: {\n        'fontSize': '3em',\n        'color': 'crimson'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 119\n      }\n    });\n  }\n\n  checkPrimaryEL(rowData, column) {\n    return rowData.primary_el ? __jsx(\"i\", {\n      className: \"pi pi-check\",\n      style: {\n        'fontSize': '3em',\n        'color': 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 38\n      }\n    }) : __jsx(\"i\", {\n      className: \"pi pi-times\",\n      style: {\n        'fontSize': '3em',\n        'color': 'crimson'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 119\n      }\n    });\n  }\n\n  checkPrimaryGL(rowData, column) {\n    return rowData.primary_gl ? __jsx(\"i\", {\n      className: \"pi pi-check\",\n      style: {\n        'fontSize': '3em',\n        'color': 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 38\n      }\n    }) : __jsx(\"i\", {\n      className: \"pi pi-times\",\n      style: {\n        'fontSize': '3em',\n        'color': 'crimson'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 119\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state, 'this state');\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"content-section introduction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"feature-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"DataTable - Edit\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Cell and Row editing provides a rapid and user friendly way to manipulate data.\"))), __jsx(\"div\", {\n      className: \"content-section implementation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, __jsx(Growl, {\n      ref: el => this.growl = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Applicant Table\"), __jsx(DataTable, {\n      value: this.state.cars2,\n      editMode: \"row\",\n      rowEditorValidator: this.onRowEditorValidator,\n      onRowEditInit: this.onRowEditInit,\n      onRowEditSave: this.onRowEditSave,\n      onRowEditCancel: this.onRowEditCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, __jsx(Column, {\n      field: \"first_name\",\n      header: \"Vin\",\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"first_name\",\n      header: \"First Name\",\n      editor: props => this.editorForRowEditing(props, 'first_name'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"last_name\",\n      header: \"Last Name\",\n      editor: props => this.editorForRowEditing(props, 'last_name'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"email_address\",\n      header: \"Email Address\",\n      editor: props => this.editorForRowEditing(props, 'email_address'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"phone_number\",\n      header: \"Phone Number\",\n      editor: props => this.editorForRowEditing(props, 'phone_number'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"effective_date\",\n      header: \"Effective Date\",\n      editor: props => this.editorForRowEditing(props, 'effective_date'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"status\",\n      header: \"Status\",\n      editor: props => this.editorForRowEditing(props, 'status'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"primary_al\",\n      header: \"Auto Liability\",\n      body: this.checkPrimaryAL,\n      editor: props => this.editorForRowEditing(props, 'primary_al'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"primary_gl\",\n      header: \"General Liability\",\n      body: this.checkPrimaryEL,\n      editor: props => this.editorForRowEditing(props, 'primary_gl'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      field: \"primary_el\",\n      header: \"Primary Liability\",\n      body: this.checkPrimaryGL,\n      editor: props => this.editorForRowEditing(props, 'primary_el'),\n      style: {\n        height: '3.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      header: \"Delete Applicant\",\n      body: this.actionTemplate,\n      style: {\n        textAlign: 'center',\n        width: '8em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), __jsx(Column, {\n      header: \"Edit\",\n      rowEditor: true,\n      style: {\n        'width': '70px',\n        'textAlign': 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default DataTableEditDemo2;","map":{"version":3,"sources":["/Users/gm/Desktop/workFolder/client/pages/dashboard.js"],"names":["DataTable","Column","InputText","Dropdown","Growl","Button","CarService","getCarsSmall","fetch","method","headers","then","response","json","data","getCarsMedium","res","getCarsLarge","DataTableEditDemo2","React","Component","constructor","state","users","clonedUsers","carservice","editorForRowEditing","bind","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","actionTemplate","handleDelete","checkPrimaryAL","checkPrimaryEL","checkPrimaryGL","componentDidMount","setState","cars2","onEditorValueChangeForRowEditing","props","value","updatedUsers","rowIndex","field","rowData","e","target","console","log","length","event","vin","id","body","JSON","stringify","growl","show","severity","summary","detail","index","column","marginRight","preventDefault","userId","primary_al","primary_el","primary_gl","render","el","height","textAlign","width"],"mappings":"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","sourcesContent":["import {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {InputText} from 'primereact/inputtext';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Growl} from 'primereact/growl';\nimport { Button } from 'primereact/button';\n\n\nexport class CarService {\n\n    getCarsSmall() {\n        return fetch('http://localhost:4000/user', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(data => data);\n        // .then((data) => {console.log(data)});\n    }\n\n    getCarsMedium() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n\n    getCarsLarge() {\n        return fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json);\n    }\n}\nclass DataTableEditDemo2 extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            users: []\n        };\n\n        this.clonedUsers = {};\n        this.carservice = new CarService();\n\n        this.editorForRowEditing = this.editorForRowEditing.bind(this);\n        this.onRowEditorValidator = this.onRowEditorValidator.bind(this);\n        this.onRowEditInit = this.onRowEditInit.bind(this);\n        this.onRowEditSave = this.onRowEditSave.bind(this);\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\n\n        //  Delete Method \n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n\n        // Checks if what type of Liability User has\n        this.checkPrimaryAL = this.checkPrimaryAL.bind(this);\n        this.checkPrimaryEL = this.checkPrimaryEL.bind(this);\n        this.checkPrimaryGL = this.checkPrimaryGL.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.carservice.getCarsSmall().then(data => this.setState({cars2: data}));\n    }\n\n   \n\n    /* Row Editing */\n    onEditorValueChangeForRowEditing(props, value) {\n        let updatedUsers = [...props.value];\n        updatedUsers[props.rowIndex][props.field] = value;\n        this.setState({users: updatedUsers});\n    }\n\n    editorForRowEditing(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChangeForRowEditing(props, e.target.value)} />;\n    }\n\n    onRowEditorValidator(rowData) {\n        console.log(rowData, 'rowdataonroweditovalidto')\n        let value = rowData['first_name'];\n        return value.length > 0;\n    }\n\n    onRowEditInit(event) {\n        this.clonedUsers[event.data.vin] = {...event.data};\n    }\n\n    onRowEditSave(event) {\n        if (this.onRowEditorValidator(event.data)) {\n            console.log(event.data.id, ' this event data ')\n            delete this.clonedUsers[event.data.vin];\n            fetch('http://localhost:4000/user/' + event.data.id, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(event.data)\n            })\n            .then(response => response.json())\n            .then(data => this.setState({ users: data }));\n            this.growl.show({severity: 'success', summary: 'Success', detail: 'Car is updated'});\n        }\n        else {\n            this.growl.show({severity: 'error', summary: 'Error', detail: 'Brand is required'});\n        }\n    }\n\n    onRowEditCancel(event) {\n        let users = [...this.state.users];\n        users[event.index] = this.clonedUsers[event.data.vin];\n        delete this.clonedUsers[event.data.vin];\n        this.setState({\n            users: users\n        })\n    }\n\n    // These handle the Delete method \n    actionTemplate(rowData, column) {\n        return <div>\n            <Button\n                type=\"button\"\n                icon=\"pi pi-times\"\n                className=\"p-button-danger\"\n                style={{ marginRight: '.5em' }}\n                onClick={(e) => this.handleDelete(rowData, e)}\n            >\n            </Button>\n        </div>;\n    }\n\n    handleDelete(rowData, e) {\n        e.preventDefault();\n        const userId = rowData.id;\n        fetch('http://localhost:4000/user/' + userId, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(response => response.json())\n        .then(this.setState({ users: rowData }));\n    }\n\n\n     //  Ternary function for liabilities\n     checkPrimaryAL(rowData, column) {\n        console.log(rowData.primary_al, 'rowDAtaeqweq')\n        return rowData.primary_al ? (<i className=\"pi pi-check\" style={{'fontSize': '3em', 'color': 'green'}}></i>):( <i className=\"pi pi-times\" style={{'fontSize': '3em', 'color': 'crimson'}}></i>)\n    }\n\n    checkPrimaryEL(rowData, column) {\n        return rowData.primary_el ? (<i className=\"pi pi-check\" style={{'fontSize': '3em', 'color': 'green'}}></i>):( <i className=\"pi pi-times\" style={{'fontSize': '3em', 'color': 'crimson'}}></i>)\n\n    }\n\n    checkPrimaryGL(rowData, column) {\n        return rowData.primary_gl ? (<i className=\"pi pi-check\" style={{'fontSize': '3em', 'color': 'green'}}></i>):( <i className=\"pi pi-times\" style={{'fontSize': '3em', 'color': 'crimson'}}></i>)\n\n    }\n\n    render() {\n        console.log(this.state, 'this state')\n        return (\n            <div>\n                <div className=\"content-section introduction\">\n                    <div className=\"feature-intro\">\n                        <h1>DataTable - Edit</h1>\n                        <p>Cell and Row editing provides a rapid and user friendly way to manipulate data.</p>\n                    </div>\n                </div>\n\n                <div className=\"content-section implementation\">\n                    <Growl ref={(el) => this.growl = el} />\n\n                    {/* <h3>Cell Editing</h3>\n                    <DataTable value={this.state.cars1} editable={true}>\n                        <Column field=\"vin\" header=\"Vin\" editor={this.vinEditor} editorValidator={this.requiredValidator} style={{height: '3.5em'}}/>\n                        <Column field=\"year\" header=\"Year\" editor={this.yearEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"brand\" header=\"Brand\" editor={this.brandEditor} style={{height: '3.5em'}}/>\n                        <Column field=\"color\" header=\"Color\" editor={this.colorEditor} style={{height: '3.5em'}}/>\n                    </DataTable> */}\n\n                    <h3>Applicant Table</h3>\n                    <DataTable value={this.state.cars2} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"first_name\" header=\"Vin\" style={{height: '3.5em'}}/>\n                        <Column field=\"first_name\" header=\"First Name\" editor={(props) => this.editorForRowEditing(props, 'first_name')} style={{height: '3.5em'}}/>\n                        <Column field=\"last_name\" header=\"Last Name\" editor={(props) => this.editorForRowEditing(props, 'last_name')} style={{height: '3.5em'}}/>\n                        <Column field=\"email_address\" header=\"Email Address\" editor={(props) => this.editorForRowEditing(props, 'email_address')} style={{height: '3.5em'}}/>\n                        <Column field=\"phone_number\" header=\"Phone Number\" editor={(props) => this.editorForRowEditing(props, 'phone_number')} style={{height: '3.5em'}}/>\n                        <Column field=\"effective_date\" header=\"Effective Date\" editor={(props) => this.editorForRowEditing(props, 'effective_date')} style={{height: '3.5em'}}/>\n                        <Column field=\"status\" header=\"Status\" editor={(props) => this.editorForRowEditing(props, 'status')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_al\" header=\"Auto Liability\" body={this.checkPrimaryAL} editor={(props) => this.editorForRowEditing(props, 'primary_al')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_gl\" header=\"General Liability\" body={this.checkPrimaryEL} editor={(props) => this.editorForRowEditing(props, 'primary_gl')} style={{height: '3.5em'}}/>\n                        <Column field=\"primary_el\" header=\"Primary Liability\" body={this.checkPrimaryGL} editor={(props) => this.editorForRowEditing(props, 'primary_el')} style={{height: '3.5em'}}/>\n                        <Column header=\"Delete Applicant\" body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\n\n                        <Column header=\"Edit\" rowEditor={true} style={{'width': '70px', 'textAlign': 'center'}}></Column>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataTableEditDemo2;"]},"metadata":{},"sourceType":"module"}