{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col, Grid } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'; // const UserInfo = [\n//     {link: \"/\", name: \"Program\"},\n//     {link: \"/info\", name: \"Info\"},\n//     {link: \"/booking\", name: \"Booking\"},\n//     {link: \"/FAQ\", name: \"FAQ\"},\n//     {link: \"/contact\", name: \"Contact\"},\n//   ]\n//   const UILink = ({link, name}) => \n//     <LI_list>\n//       <Alink to={link} onClick={this.toggleExpandedMenu}> {name} </Alink> <Span />\n//     </LI_list>\n//   const UILinkContainer = () => routes.map(UILink)\n\nclass UserForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      phone_number: '',\n      company_name: '',\n      status: 'pending',\n      primary_al: false,\n      primary_gl: false,\n      primary_el: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const booleanTargetNames = [\"primary_al\", \"primary_gl\", \"primary_el\"];\n    const target = e.target; // If this a boolean target (checkbox toggle) return it's \"checked\" property\n    // Else it's a regular input so we should read the \"value\" property\n\n    const value = booleanTargetNames.includes(target.name) ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state, 'state of user form');\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const data = this.state;\n    const requestOptions = {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:4000/users', requestOptions).then(response => response.json()).then(response => console.log('succes', response));\n    console.log(this.state, \"handleFormSubmit\");\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Form, {\n      onSubmit: this.handleFormSubmit\n    }, __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\"\n    }, __jsx(Form.Label, null, \"First Name\"), __jsx(Form.Control, {\n      type: \"name\",\n      placeholder: \"First Name\",\n      name: \"first_name\",\n      onChange: this.onChange\n    })), __jsx(Form.Group, {\n      as: Col,\n      controlId: \"formGridLastName\"\n    }, __jsx(Form.Label, null, \"Last Name\"), __jsx(Form.Control, {\n      type: \"lastName\",\n      placeholder: \"Last name\",\n      name: \"last_name\",\n      onChange: this.onChange\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\"\n    }, __jsx(Form.Label, null, \"Email\"), __jsx(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email_address\",\n      onChange: this.onChange\n    })), __jsx(Form.Group, {\n      as: Col,\n      controlId: \"formGridPhoneNumber\"\n    }, __jsx(Form.Label, null, \"Phone Number\"), __jsx(Form.Control, {\n      type: \"phone_number\",\n      placeholder: \"Phone number\",\n      name: \"phone_number\",\n      onChange: this.onChange\n    }))), __jsx(Form.Group, {\n      controlId: \"formGridAddress1\"\n    }, __jsx(Form.Label, null, \"Company Name\"), __jsx(Form.Control, {\n      placeholder: \"Company Name\",\n      name: \"company_name\",\n      onChange: this.onChange\n    })), __jsx(Form.Group, {\n      id: \"formGridCheckbox\"\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      label: \"primary_al\",\n      name: \"primary_al\",\n      checked: this.state.primary_al,\n      onChange: this.onChange\n    })), __jsx(Form.Group, {\n      id: \"formGridCheckbox\"\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      label: \"primary_gl\",\n      name: \"primary_gl\",\n      checked: this.state.primary_gl,\n      onChange: this.onChange\n    })), __jsx(Form.Group, {\n      id: \"formGridCheckbox\"\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      label: \"primary_el\",\n      name: \"primary_el\",\n      checked: this.state.primary_el,\n      onChange: this.onChange\n    })), __jsx(Button, {\n      variant: \"primary\",\n      type: \"submit\"\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UserForm;","map":null,"metadata":{},"sourceType":"module"}